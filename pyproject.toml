[project]
    dependencies = [
        "aiosqlite",
        "alembic",
        "databases",
        "falcon",
        "httpie",
        "python-decouple",
        "sqlalchemy",
        "uvicorn[standard]",
    ]
    description = "TODO"
    name = "e-commerce"
    readme = "README.md"
    requires-python = ">=3.12.9"
    version = "0.1.0"

[tool.black]
    line-length    = 120
    preview        = true
    target-version = ["py312"]

[tool.ruff]
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".ipynb_checkpoints",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pyenv",
        ".pytest_cache",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        ".vscode",
        "__pycache__",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "site-packages",
        "types",
        "venv",
    ]
    line-length = 120
    preview = true
    target-version = "py312"

[tool.ruff.lint]
    select = [
        "ALL", # include all the rules \_*-*_/
    ]

    ignore = [
        "CPY001", # Missing copyright notice at top of file
        "D100",   # Missing docstring in public module
        "D101",   # Missing docstring in public class
        "D102",   # Missing docstring in public method
        "D103",   # Missing docstring in public function
        "D104",   # Missing docstring in public package
        "D105",   # Missing docstring in magic method
        "D106",   # Missing docstring in public nested class
        "D107",   # Missing docstring in __init__
        "ERA001", # Found commented-out code
        "INP001", # File is part of an implicit namespace package. Add an __init__.py.
        "S101",   # Use of assert detected
        "S311",   # Standard pseudo-random generators are not suitable for cryptographic purposes
        "T201",   # print found
        "TD002",  # Missing author in TODO
        "TD003",  # Missing issue link for this TODO
    ]

    fixable = ["ALL"]

    unfixable = [
        "F401", # unused import
        "F841", # unused variable
    ]

[tool.ruff.lint.flake8-annotations]
    suppress-none-returning = true

[tool.isort]
    atomic         = true
    line-length    = 120
    profile        = "black"
    py_version     = 312
    skip_gitignore = true

[tool.basedpyright]
    pythonVersion = "3.12"

    typeCheckingMode = "recommended"

    exclude = [
        "**/__pycache__",
        ".git",
        ".git-rewrite",
        ".venv",
        ".vscode",
        "__pypackages__",
        "migrations",
        "types",
        "typings",
    ]

[dependency-groups]
    dev = ["basedpyright", "ruff"]
